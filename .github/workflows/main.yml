name: Main Workflow

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Run tests
        run: cargo test --verbose
      
      - name: Build
        run: cargo build --verbose

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: gwf
            archive: gwf-linux-amd64.tar.gz
          
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: gwf
            archive: gwf-macos-amd64.tar.gz
          
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: gwf.exe
            archive: gwf-windows-amd64.zip
    
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Create archive (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.archive }} ${{ matrix.binary }}
      
      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.archive }} ${{ matrix.binary }}
      
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.archive }}
          draft: false